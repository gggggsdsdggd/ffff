-- Inline script code (for reference or direct execution)
local MAIN_USERID = 123456789  -- Your main account's UserId (number)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Mark this player as a script user (for detection)
local scriptUserFlag = Instance.new("BoolValue")
scriptUserFlag.Name = "ScriptUser"
scriptUserFlag.Value = true
scriptUserFlag.Parent = LocalPlayer

-- Print local player's UserId
print("Your UserId is: " .. LocalPlayer.UserId)

-- Label function: Add BillboardGui for main user (non-main script users) or alts (main account)
local function addLabel(player)
    -- Main account: Create "Alt User" labels for alts in ALTS table
    if LocalPlayer.UserId == MAIN_USERID and table.find(ALTS, player.UserId) and player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if head:FindFirstChild("AltUserLabel") then return end
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "AltUserLabel"
        billboard.Adornee = head
        billboard.Size = UDim2.new(4, 0, 1, 0) -- Scale units for fixed size on zoom
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "Alt User"
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White
        textLabel.TextScaled = false
        textLabel.TextSize = 24 -- Normal size
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = billboard

        billboard.Parent = head
        print("Added label to alt: " .. player.Name .. " (" .. player.UserId .. ")")
        print("Detected alt user: " .. player.Name .. " (" .. player.UserId .. ")")
    -- Non-main script users: Create "Owner" label for main user (only if UserId in ALTS or script user)
    elseif LocalPlayer.UserId ~= MAIN_USERID and player.UserId == MAIN_USERID and player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if head:FindFirstChild("OwnerLabel") then return end
        local billboard = Instance.new("BillboardGui")
        billboard.Name = "OwnerLabel"
        billboard.Adornee = head
        billboard.Size = UDim2.new(4, 0, 1, 0) -- Scale units for fixed size on zoom
        billboard.StudsOffset = Vector3.new(0, 3, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = "Owner"
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White
        textLabel.TextScaled = false
        textLabel.TextSize = 24 -- Normal size
        textLabel.Font = Enum.Font.SourceSansBold
        textLabel.Parent = billboard

        billboard.Parent = head
        print("Added label to owner: " .. player.Name .. " (" .. player.UserId .. ")")
    end
end

-- Remove label
local function removeLabel(player)
    if player.Character and player.Character:FindFirstChild("Head") then
        local head = player.Character.Head
        if LocalPlayer.UserId == MAIN_USERID and head:FindFirstChild("AltUserLabel") then
            head.AltUserLabel:Destroy()
            print("Removed alt label from " .. player.Name .. " (" .. player.UserId .. ")")
        elseif LocalPlayer.UserId ~= MAIN_USERID and head:FindFirstChild("OwnerLabel") then
            head.OwnerLabel:Destroy()
            print("Removed owner label from " .. player.Name .. " (" .. player.UserId .. ")")
        end
    end
end

-- Monitor players for labels
local function updateLabels()
    for _, player in ipairs(Players:GetPlayers()) do
        -- Print UserIds of detected alts to main account's console
        if LocalPlayer.UserId == MAIN_USERID and table.find(ALTS, player.UserId) then
            print("Detected alt user: " .. player.Name .. " (" .. player.UserId .. ")")
        end
        -- Apply labels
        addLabel(player)
    end
end

-- Run label updates on heartbeat and when players join/leave
RunService.Heartbeat:Connect(updateLabels)
Players.PlayerAdded:Connect(updateLabels)
Players.PlayerRemoving:Connect(updateLabels)

-- Handle character respawn
LocalPlayer.CharacterAdded:Connect(function()
    wait(1) -- Wait for character to load
    -- Re-apply script user flag
    local newFlag = Instance.new("BoolValue")
    newFlag.Name = "ScriptUser"
    newFlag.Value = true
    newFlag.Parent = LocalPlayer
    updateLabels()
end)

-- Initial label update
updateLabels()
print("Shared Script Label loaded! Main UserId: " .. MAIN_USERID .. ". Alts must be in ALTS table to be labeled for main; script users see 'Owner' on main.")
